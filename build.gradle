buildscript {
	dependencies {
		classpath "org.flywaydb:flyway-mysql:10.13.0"
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.flywaydb.flyway" version "10.13.0"
	id 'jacoco'
}

group = 'com.example.sampleapp'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainers.version', "1.19.3")
}

dependencies {
	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	runtimeOnly 'org.flywaydb:flyway-mysql:10.13.0'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.flywaydb:flyway-core:10.13.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.6'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	testImplementation "org.mockito:mockito-core:3.+"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.11"
	// reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

flyway {
	driver = "$System.env.DB_DRIVER"
	url = "$System.env.DB_URL"
	user = "$System.env.DB_USER"
	password = "$System.env.DB_PASSWORD"
	defaultSchema = "public"
}
